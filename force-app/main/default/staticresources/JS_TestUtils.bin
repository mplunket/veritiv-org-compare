var JSTestUtils = (function()
{
			var mock = function (fullyFledgedName, mockFunction) 
        	{
        		var functionPath = fullyFledgedName.split('.');
    	        //Note this function is not a full-featured implementation of a "mock" function.
    	        var originalFunction = window;
    	        var originalFunctionParent = window;
    	        var originalFunctionName = functionPath[functionPath.length-1];

    	        for(var i = 0; i < functionPath.length; i ++)
    	        {
    	        	originalFunction = originalFunction[functionPath[i]];
    	        	if(i==functionPath.length-2) originalFunctionParent = originalFunction; 
    	        }

    	        var calledCounter = 0;
    	        var newFunction = function() {
    	                calledCounter++;
    	                return mockFunction.apply(this, arguments);
    	        };
    	        newFunction.restore = function() {
    	                 originalFunctionParent[originalFunctionName] = originalFunction;
    	        }
    	        newFunction.getCalledCount = function() {
    	                return calledCounter;
    	        }

    	        originalFunctionParent[originalFunctionName] = newFunction;
    	        
    	        if( !mock.queue )
    	        	mock.queue = {};
    	        
    	        if( !mock.queue[fullyFledgedName] )
    	        {
    	        	mock.queue[fullyFledgedName] =  newFunction.restore;
    	        }
    	        
        	};
        	
        	mock.restoreAll = function ()
        	{
        		if(mock.queue)
        		{
	        		for (var fullyFledgedName in mock.queue ) 
	        		{
	        			mock.queue[fullyFledgedName]();
	        		}
	        		mock.queue = {};
	        	}
        	};

        	return {
        		mock:mock
        	};
}());
        	
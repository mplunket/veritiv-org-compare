window._walkmeWebpackJP&&(window._walkmeWebpackJP=window._walkmeWebpackJP||[]).push([[24],{964:function(e,n,t){(function(n,a){(function(){n.register("Segment").asCtor(function t(o,e,r,g){this.start=function n(){return new a(function(e){d("Bootstrap Segment integration. Create segmentation object and updating WalkMeAPI"),function n(){g&&(g.Segment=g.Segment||{});g.Segment.userId||Object.defineProperty(g.Segment,"userId",{get:function(){try{return window.analytics.user().id()}catch(e){return void d.error(e,"Problem accessing Segment API")}}});o.Segment={identify:s,track:c},g.on("WalkMeReady",function(){d("Detecting if we have been called before WalkMeAPI was ready"),function e(){g.Segment&&g.Segment.preLoadedData&&(d("Fetching values from cache. Identify happened before WalkMeAPI was ready"),g.Segment=l(g.Segment.preLoadedData[0]))}()})}(),d("Creating outbound integration"),function t(){if(!window._walkmeConfig.segmentOptions||!window._walkmeConfig.segmentOptions.trackWalkMeEvents)return;_walkmeInternals.bind("AnalyticsEventSent",function(e,n){n&&window.analytics&&window.analytics.track(m+n.eventData.type,n.eventData.data)})}(),d("Calling Segment Connector telling we are ready"),function a(){window.walkme_segment_ready&&window.walkme_segment_ready()}(),d("Wait for analytics.identify to happen before continue loading"),function i(e,n){n=n||0;g.Segment&&g.Segment.userId?(d("Segment object is populated in _walkMeInternals. Continue loading",1),e()):r.libSetTimeout(function(){n<20?i(e,++n):(d("Unable to find segmentation variables populated. Segment's analytics.identify not getting called"),e())},200)}(e)})};var d=e.wrapCustomerLog("SegmentIntegration");function s(e){d("Identify from Segment happened!"),g.Segment=l(e)}function c(e){d("Track from Segment happened!")}function l(e){var n={};return e.userId()?(n.userId=String(e.userId()),n.isAnonUser=!1):(n.userId=String(e.anonymousId()),n.isAnonUser=!0),n.email=e.email(),n.traits=e.traits(),n}}).dependencies("ClassWalkMeAPI, Logger, TimerManager, WmInternals");var m="WalkMe_";e.exports={init:function(e){return n.get("Segment").start(e)["catch"](function(e){n.get("Logger").error(e)})}}}).call(window)}).call(this,t(2),t(29))}}]);